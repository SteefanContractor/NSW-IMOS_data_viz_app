dimnames(Temp_clim_nobs) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_nyrs) <- list(paste(pressures), paste(yearday))
image(Temp_clim_nobs)
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
c(236,239,244)
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
pressure = 20
runLen = 3
data = rbind(get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]],
get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]])
# par(mar=c(5.1,5.1,4.1,2.1))
# barplot(data, col = c("blue", "red"), beside = T,
#         xlab = "Years", ylab = "Number of heat/coldwave events")
# legend('topleft',fill=c("blue", "red"),legend=c('Coldwaves','Heatwaves'))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group")
# Convert Marine temp anomaly bar plot into plotly
pressure = pressures[6]
runLen = 3
data = rbind(get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]],
get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]])
# par(mar=c(5.1,5.1,4.1,2.1))
# barplot(data, col = c("blue", "red"), beside = T,
#         xlab = "Years", ylab = "Number of heat/coldwave events")
# legend('topleft',fill=c("blue", "red"),legend=c('Coldwaves','Heatwaves'))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group")
# par(mar=c(5.1,5.1,4.1,2.1))
# barplot(data, col = c("blue", "red"), beside = T,
#         xlab = "Years", ylab = "Number of heat/coldwave events")
# legend('topleft',fill=c("blue", "red"),legend=c('Coldwaves','Heatwaves'))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group")
get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]]
runLen = 3
get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]]
View(num.coldwaves.RL2)
which(pressures == pressure)
num.heatwaves.RL2 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, runLen = 2, hotAnomaly = T)
num.complete.runs.TS.RL2 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 2)
# runLen = 3
num.heatwaves.RL3 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 3)
num.complete.runs.TS.RL3 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 3)
# runLen = 4
num.heatwaves.RL4 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 4)
num.complete.runs.TS.RL4 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 4)
# runLen = 5
num.heatwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 5)
num.complete.runs.TS.RL5 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 5)
# Coldwaves
# runLen = 2
num.coldwaves.RL2 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 2)
# runLen = 3
num.coldwaves.RL3 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 3)
# runLen = 4
num.coldwaves.RL4 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 4)
# runLen = 5
num.coldwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 5)
# par(mar=c(5.1,5.1,4.1,2.1))
# barplot(data, col = c("blue", "red"), beside = T,
#         xlab = "Years", ylab = "Number of heat/coldwave events")
# legend('topleft',fill=c("blue", "red"),legend=c('Coldwaves','Heatwaves'))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group")
get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]]
num.coldwaves.RL2[[1]]
library(ncdf4)
library(zoo)
library(lubridate)
library(readODS)
library(tidyverse)
library(plotly)
# change local to True when developing locally
local = system("uname -n", intern = T) == "matht250"#T
if (local) {
basePath <- "~/Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app/data/"#"~/ownCloud/Working_Directory/Postdoc-SchoolOfMathsStats/Scripts/Simple_shiny_Climatology_dashboard_app/data/"
#"~/sci-maths-ocean/shared/PEOPLE/Steefan/climatology/data/"
} else {
basePath <- "./data/"
}
nc <- nc_open(filename = paste0(basePath,"IMOS_NSW_TZ_S19530531040000Z_PH100NRSPHB_FV02_CLIMATOLOGY_TEMP_E20181206212730Z_C20190327132838Z.nc"))
Temp_clim_mean <- ncvar_get(nc, varid = "TEMP_AVE")
Temp_clim_med <- ncvar_get(nc, varid = "TEMP_MED")
Temp_clim_std <- ncvar_get(nc, varid = "TEMP_STD")
Temp_clim_P90 <- ncvar_get(nc, varid = "TEMP_PER90")
Temp_clim_P10 <- ncvar_get(nc, varid = "TEMP_PER10")
Temp_clim_nobs <- ncvar_get(nc, varid = "NOBS")
Temp_clim_nyrs <- ncvar_get(nc, varid = "NYRS")
pressures <- ncvar_get(nc, varid = "PRES")
time <- ncvar_get(nc, varid = "TIME")
nc_close(nc)
dates <- ymd("19500101") + time
yearday <- yday(dates)
dimnames(Temp_clim_mean) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_med) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_std) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_P90) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_P10) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_nobs) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_nyrs) <- list(paste(pressures), paste(yearday))
########################
# load yearly data
get_fnames <- function(years) {
# function to fetch file names with a particular year given a list of years
fnames <- c()
for (y in years) {
fname <- list.files(path = paste0(basePath, "phyearlyfilesdata/"),
pattern = glob2rx(paste0("*S",y,"*FV02_AVERAGE_TEMP*E",y,"*")))
fnames <- append(fnames, fname)
}
return(fnames)
}
read_yearly_data <- function(fname) {
# function to read yearly data give a vector of nc file names
if(fname == "") stop("No file name provided")
nc <- nc_open(filename = paste0(basePath, "phyearlyfilesdata/",
fname))
Temp_Avg <- ncvar_get(nc, varid = "TEMP_AVERAGE")
nc_close(nc)
dimnames(Temp_Avg) <- list(paste(pressures), paste(yearday))
return(Temp_Avg)
}
is.anomalous <- function(temp_ts, Temp_clim_P90_ts, Temp_clim_P10_ts) {
# function that checks yearly_data to see if temperatures are outside the 90th and 10th pc
temp_ts > Temp_clim_P90_ts | temp_ts < Temp_clim_P10_ts
}
is.hot.anomaly <- function(temp_ts, Temp_clim_P90_ts) {
# function that checks yearly_data to see if temperatures are outside the 90th and 10th pc
temp_ts > Temp_clim_P90_ts
}
is.cold.anomaly <- function(temp_ts, Temp_clim_P10_ts) {
# function that checks yearly_data to see if temperatures are outside the 90th and 10th pc
temp_ts < Temp_clim_P10_ts
}
num.True.runLen <- function(boolTS, runLen = 2) {
length(which(rle(boolTS)$lengths[which(rle(boolTS)$values == 1)] >= runLen))
}
num.complete.runs <- function(TS, runLen = 2) {
boolTS <- !is.na(TS)
num.True.runLen(boolTS = boolTS, runLen = runLen)
}
possibleRuns <- function(n, runLen = 2) {
if(n < runLen){
return(0)
} else if (n == runLen) {
return(1)
} else {
return(2*possibleRuns(n-1, runLen = runLen)+1)
}
}
totalPossibleRuns <- function(TS, runLen = 2) {
boolTS <- !is.na(TS)
runs <- rle(boolTS)$length[which(rle(boolTS)$values == T)]
sum(unlist(sapply(runs, FUN = possibleRuns, runLen = runLen)))
}
create.num.True.runLen.TS <- function(yearly_data, hotAnomaly = T, depth = pressures[1], runLen = 2) {
sapply(lapply(yearly_data, FUN = function(x) {
if (hotAnomaly) {
is.hot.anomaly(temp_ts = x[paste(depth),],
Temp_clim_P90_ts = Temp_clim_P90[paste(depth), ])
} else {
is.cold.anomaly(temp_ts = x[paste(depth),],
Temp_clim_P10_ts = Temp_clim_P10[paste(depth), ])
}
}), FUN = num.True.runLen, runLen = runLen)
}
create.num.complete.runs.TS <- function(yearly_data, depth = pressures[1], runLen = 2) {
#sapply(l
sapply(yearly_data, FUN = function(x, RL) {
totalPossibleRuns(x[paste(depth),], runLen = RL)#,
# Temp_clim_P90_ts = Temp_clim_P90[paste(depth), ],
# Temp_clim_P10_ts = Temp_clim_P10[paste(depth), ])
}, RL = runLen)#, FUN = num.complete.runs, runLen = runLen)
}
years <- seq(1954,2018)
fnames <- get_fnames(years)
yearly_data <- lapply(fnames, FUN = read_yearly_data)
years <- as.numeric(substring(fnames, regexpr("*TZ_S", fnames) + 4, regexpr("*TZ_S", fnames) + 7))
names(yearly_data) <- years
# bool <- is.anomalous(yearly_data$`2015`[,1],
#                      Temp_Clim_P90_ts = Temp_Clim_P90_grid[1,],
#                      Temp_Clim_P10_ts = Temp_Clim_P10_grid[1,])
# Heatwaves
# runLen = 2
num.heatwaves.RL2 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, runLen = 2, hotAnomaly = T)
num.complete.runs.TS.RL2 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 2)
# runLen = 3
num.heatwaves.RL3 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 3)
num.complete.runs.TS.RL3 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 3)
# runLen = 4
num.heatwaves.RL4 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 4)
num.complete.runs.TS.RL4 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 4)
# runLen = 5
num.heatwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 5)
num.complete.runs.TS.RL5 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 5)
# Coldwaves
# runLen = 2
num.coldwaves.RL2 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 2)
# runLen = 3
num.coldwaves.RL3 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 3)
# runLen = 4
num.coldwaves.RL4 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 4)
# runLen = 5
num.coldwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 5)
get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]]
# par(mar=c(5.1,5.1,4.1,2.1))
# barplot(data, col = c("blue", "red"), beside = T,
#         xlab = "Years", ylab = "Number of heat/coldwave events")
# legend('topleft',fill=c("blue", "red"),legend=c('Coldwaves','Heatwaves'))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group")
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group",
legend = list(x = 0, y = 0))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group",
legend = list(x = 0, y = 1))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group",
legend = list(x = 0, y = 0.9))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group",
legend = list(x = 0, y = 0.95))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group",
legend = list(x = 0, y = 0.98))
plot_ly(x=years,y=get(paste0("num.coldwaves.RL", runLen))[[which(pressures == pressure)]], type = 'bar',
name = "Marine heatwave") %>%
add_trace(y=get(paste0("num.heatwaves.RL", runLen))[[which(pressures == pressure)]], name = "Marine coldwave") %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = "Number of events"),
barmode = "group",
legend = list(x = 0, y = 0.99))
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
totalPossibleRuns_TS = get(paste0("num.complete.runs.TS.RL", runLen))[[which(pressures == pressure)]]
ylab = "Maximum possible number of heat/coldwaves\n based on data availability"
if (max(totalPossibleRuns_TS) > 200) {
totalPossibleRuns_TS = ifelse(totalPossibleRuns_TS == 0, 0, log(totalPossibleRuns_TS))
ylab = paste(ylab, "(log scale)")
}
plot_ly(x=years,y=totalPossibleRuns_TS, name = paste("Total possible events of length", runLen),
type = 'bar') %>%
layout(xaxis = list(title = "Years"),
yaxis = list(title = ylab))
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
shiny::runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
# Exploratory script for climatologies
library(ncdf4)
library(zoo)
library(lubridate)
library(readODS)
library(tidyverse)
library(plotly)
# change local to True when developing locally
local = system("uname -n", intern = T) == "matht250"#T
if (local) {
basePath <- "~/Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app/data/"#"~/ownCloud/Working_Directory/Postdoc-SchoolOfMathsStats/Scripts/Simple_shiny_Climatology_dashboard_app/data/"
#"~/sci-maths-ocean/shared/PEOPLE/Steefan/climatology/data/"
} else {
basePath <- "./data/"
}
nc <- nc_open(filename = paste0(basePath,"IMOS_NSW_TZ_S19530531040000Z_PH100NRSPHB_FV02_CLIMATOLOGY_TEMP_E20181206212730Z_C20190327132838Z.nc"))
Temp_clim_mean <- ncvar_get(nc, varid = "TEMP_AVE")
Temp_clim_med <- ncvar_get(nc, varid = "TEMP_MED")
Temp_clim_std <- ncvar_get(nc, varid = "TEMP_STD")
Temp_clim_P90 <- ncvar_get(nc, varid = "TEMP_PER90")
Temp_clim_P10 <- ncvar_get(nc, varid = "TEMP_PER10")
Temp_clim_nobs <- ncvar_get(nc, varid = "NOBS")
Temp_clim_nyrs <- ncvar_get(nc, varid = "NYRS")
pressures <- ncvar_get(nc, varid = "PRES")
time <- ncvar_get(nc, varid = "TIME")
nc_close(nc)
dates <- ymd("19500101") + time
yearday <- yday(dates)
dimnames(Temp_clim_mean) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_med) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_std) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_P90) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_P10) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_nobs) <- list(paste(pressures), paste(yearday))
dimnames(Temp_clim_nyrs) <- list(paste(pressures), paste(yearday))
########################
# load yearly data
get_fnames <- function(years) {
# function to fetch file names with a particular year given a list of years
fnames <- c()
for (y in years) {
fname <- list.files(path = paste0(basePath, "phyearlyfilesdata/"),
pattern = glob2rx(paste0("*S",y,"*FV02_AVERAGE_TEMP*E",y,"*")))
fnames <- append(fnames, fname)
}
return(fnames)
}
read_yearly_data <- function(fname) {
# function to read yearly data give a vector of nc file names
if(fname == "") stop("No file name provided")
nc <- nc_open(filename = paste0(basePath, "phyearlyfilesdata/",
fname))
Temp_Avg <- ncvar_get(nc, varid = "TEMP_AVERAGE")
nc_close(nc)
dimnames(Temp_Avg) <- list(paste(pressures), paste(yearday))
return(Temp_Avg)
}
is.anomalous <- function(temp_ts, Temp_clim_P90_ts, Temp_clim_P10_ts) {
# function that checks yearly_data to see if temperatures are outside the 90th and 10th pc
temp_ts > Temp_clim_P90_ts | temp_ts < Temp_clim_P10_ts
}
is.hot.anomaly <- function(temp_ts, Temp_clim_P90_ts) {
# function that checks yearly_data to see if temperatures are outside the 90th and 10th pc
temp_ts > Temp_clim_P90_ts
}
is.cold.anomaly <- function(temp_ts, Temp_clim_P10_ts) {
# function that checks yearly_data to see if temperatures are outside the 90th and 10th pc
temp_ts < Temp_clim_P10_ts
}
num.True.runLen <- function(boolTS, runLen = 2) {
length(which(rle(boolTS)$lengths[which(rle(boolTS)$values == 1)] >= runLen))
}
num.complete.runs <- function(TS, runLen = 2) {
boolTS <- !is.na(TS)
num.True.runLen(boolTS = boolTS, runLen = runLen)
}
possibleRuns <- function(n, runLen = 2) {
if(n < runLen){
return(0)
} else if (n == runLen) {
return(1)
} else {
return(2*possibleRuns(n-1, runLen = runLen)+1)
}
}
totalPossibleRuns <- function(TS, runLen = 2) {
boolTS <- !is.na(TS)
runs <- rle(boolTS)$length[which(rle(boolTS)$values == T)]
sum(unlist(sapply(runs, FUN = possibleRuns, runLen = runLen)))
}
create.num.True.runLen.TS <- function(yearly_data, hotAnomaly = T, depth = pressures[1], runLen = 2) {
sapply(lapply(yearly_data, FUN = function(x) {
if (hotAnomaly) {
is.hot.anomaly(temp_ts = x[paste(depth),],
Temp_clim_P90_ts = Temp_clim_P90[paste(depth), ])
} else {
is.cold.anomaly(temp_ts = x[paste(depth),],
Temp_clim_P10_ts = Temp_clim_P10[paste(depth), ])
}
}), FUN = num.True.runLen, runLen = runLen)
}
create.num.complete.runs.TS <- function(yearly_data, depth = pressures[1], runLen = 2) {
#sapply(l
sapply(yearly_data, FUN = function(x, RL) {
totalPossibleRuns(x[paste(depth),], runLen = RL)#,
# Temp_clim_P90_ts = Temp_clim_P90[paste(depth), ],
# Temp_clim_P10_ts = Temp_clim_P10[paste(depth), ])
}, RL = runLen)#, FUN = num.complete.runs, runLen = runLen)
}
years <- seq(1954,2018)
fnames <- get_fnames(years)
yearly_data <- lapply(fnames, FUN = read_yearly_data)
years <- as.numeric(substring(fnames, regexpr("*TZ_S", fnames) + 4, regexpr("*TZ_S", fnames) + 7))
names(yearly_data) <- years
# bool <- is.anomalous(yearly_data$`2015`[,1],
#                      Temp_Clim_P90_ts = Temp_Clim_P90_grid[1,],
#                      Temp_Clim_P10_ts = Temp_Clim_P10_grid[1,])
# Heatwaves
# runLen = 2
num.heatwaves.RL2 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, runLen = 2, hotAnomaly = T)
num.complete.runs.TS.RL2 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 2)
# runLen = 3
num.heatwaves.RL3 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 3)
num.complete.runs.TS.RL3 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 3)
# runLen = 4
num.heatwaves.RL4 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 4)
num.complete.runs.TS.RL4 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 4)
# runLen = 5
num.heatwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = T, runLen = 5)
num.complete.runs.TS.RL5 <- lapply(pressures, FUN = create.num.complete.runs.TS, yearly_data = yearly_data, runLen = 5)
# Coldwaves
# runLen = 2
num.coldwaves.RL2 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 2)
# runLen = 3
num.coldwaves.RL3 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 3)
# runLen = 4
num.coldwaves.RL4 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 4)
# runLen = 5
num.coldwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 5)
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
shiny::runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
paste0(basePath,"test.html")
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
head(script(type = "text/javascript", scr = "test.js"))
head(tags$script(type = "text/javascript", scr = "test.js"))
tags$head(tags$script(type = "text/javascript", scr = "test.js"))
tags$head(tags$script(type = "text/javascript", scr = "test.js"))
tags$script(type = "text/javascript", scr = "test.js")
HTML('<script type="text/javascript"
src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBERuc7VFPIDMhCoUTMcE-z59CvoIe5wlU&sensor=true">
</script>',
'<script type="text/javascript" src="./imos_map.js"></script>')
HTML('<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBERuc7VFPIDMhCoUTMcE-z59CvoIe5wlU&sensor=true"></script>
<script type="text/javascript" src="./imos_map.js"></script>')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
tags$head(HTML('<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBERuc7VFPIDMhCoUTMcE-z59CvoIe5wlU&sensor=true"></script>
<script type="text/javascript" src="imos_map.js"></script>'))
HTML('<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyBERuc7VFPIDMhCoUTMcE-z59CvoIe5wlU&sensor=true"></script>
<script type="text/javascript" src="imos_map.js"></script>')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
titlePanel("About")
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
shiny::runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
13+18*14+68*18*14
length(1950:2017)
18*69*14
18*69*14+13
69*14
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
library(ncdf4)
library(plot3D)
library(maps)
install.packages("plot3D")
library(plot3D)
# read and format data
# CCRC
# Annual totals
nc <- nc_open("/srv/ccrc/data11/z3289452/DailyPRCP_netCDFs/CCRCGlobalGriddedDailyPrecip/VERSION1.1/ALL/REGEN_V1.1_ALLStns_1950-2013_1deg_yearsum.nc")
shiny::runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
shiny::runApp('Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
# runLen = 5
num.coldwaves.RL5 <- lapply(pressures, FUN = create.num.True.runLen.TS, yearly_data = yearly_data, hotAnomaly = F, runLen = 5)
source('~/.active-rstudio-document')
rm(nc); gc()
setwd(basePath)
save.image(file = paste0(basePath,"prerundata_20052019.RData"))
shiny::runApp('~/Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('~/Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
runApp('~/Documents/GIT_REPOS/NSW-IMOS_data_viz_app/Simple_shiny_Climatology_dashboard_app')
